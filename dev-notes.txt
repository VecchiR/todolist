na verdade: IIFE?

const pageRenderer = (function () {
    // e tal
    // mas talvez fazer isso depois, pq possivelmente vai incluir a
    //função "renderPage(), mas tambem mt do "DOMstuff"
})();


function renderPage() {   

    "modular" -> recarregar certas porçoes da pagina de acordo com 
  
    
        render sidebar -> só precisa quando ABRE A PAGINA ou ADD/REMOVE Projeto 
        
        render main-content -> sempre
}

OK - criar lista de filtros
OK - fazer eles clicaveis pra abrir "filter view"
OK - construir as regras de "tasks to show" de cada um
OK - implementar datas corretamente
OK - default view = all tasks
OK - on project view: dont show project
OK - on filter view: show project on task 
OK - on project view: when adding task, projectSelect -> deixa o project selecionado
OK - implementar "setImportant"
OK - implementar checkbox
OK - não mostrar completed tasks (exceto o filter de completed)
OK - require task name to create task (e projects tb)
OK - mostar texo "no tasks" para FILTER VIEW se nao tem nada que corresponde ao criterio
OK - context menu -> 3 pontinhos que vao abrir o "edit" e "delete"
OK - fix: dá pra abrir 2 context menus se forem em tasks diferentes
OK - aplicar logica de context menu para projects tambem
OK - context -> delete: remove a task/project da lista e update UI
OK - ao deletar o projeto, NAO É PRA ABRIR project view
OK - se deletar o projeto, tem que remover o projeto de todas as tasks
OK - set "All Tasks" as default view
OK - ao deletar um projeto aberto, troca para o default view
OK - context -> se tem um form aberto ao clicar, fecha
OK - task context -> edit: show form
OK - task context edit -> remove task (from view only)
OK - if cancel, updateTasks (já remove form)
OK - only go to default view IF THE PROJECT SHOWN IS DELETED. If p1 is showing and p2 is deleted, keep p1 showing
OK - task contextEdit -> get project
OK - task cotextEdit -> get date on date picker
OK - task ctxEdit -> on submit: change tasks values instead of creating new one

- implementar prj context Edit
- passar tudo o que for DOMstuff para o modulo certo

local storage:
- implementar local storage (json) = basicamente salvar tasklist e projectlist 

visual:
- implementar CSS
- implementar icones

extras:
- permitir escolher (e salvar) qual a vista default (default = all tasks, reabrir onde parou, selecionar projeto/filtro)
- implementar light/dark mode
- salvar e ler light/dark mode
- implementar e salvar quais filters mostrar na sidebar 



hey -> o projectID nao precisa estar no html da task. Com o task ID conseguimos dar um
'filter' ou achar o projectID la na taskList quando for necessário